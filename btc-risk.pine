// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Inspired by Benjamin Cowen's BTC risk idea and BitcoinRaven's oscillators
// Â© Nick Petalas

//@version=5
indicator("Risk Metric: BTCUSD", max_bars_back = 5000, max_boxes_count=500)

var startDate = timestamp('2013-01-01')

daysSinceGenesis(t) => math.floor((t - timestamp('2009-01-03'))/1000/60/60/24)

normalize(data) =>
    var min =  10e10
    var max = -10e10
    min := math.min(nz(data, min), min)
    max := math.max(nz(data, max), max)
    (data - min) / (max - min)
    
// normalize based on BTC market cycles
normalizeByMarketCycle(data) =>
    d1 = time <= timestamp('2011-10-19') ? data : na
    d2 = time > timestamp('2011-10-19') and time <= timestamp('2015-01-14') ? data : na
    d3 = time > timestamp('2015-01-14') and time <= timestamp('2018-12-15') ? data : na
    d4 = time > timestamp('2018-12-15') ? data : na
    normalized = not na(d1) ? normalize(d1) : (not na(d2) ? normalize(d2) : (not na(d3) ? normalize(d3) : (not na(d4) ? normalize(d4) : na)))
        
    
linReg(data) =>
    t0 = timestamp('2011-10-19')
    numBars = ta.barssince(time <= t0) 
    len = numBars > 0 ? numBars : 1 
    reg = ta.linreg(data, len, 0) 
    
src = input.source(close, title="Source")


// experimental
normalizeStrategy(data, smoothen = false) =>
    d = smoothen ? ta.sma(data, 5) : data
    normalize(d)
    
///// DAILY_OVER_WEEKLY_EMA ///// 
lengthD = input(5, title="DMA Period Length (50 for smoother slopes, 5 for precision and volatility)")
lengthM = input(50, title="WMA Period Length (50 recommended)")
daily = request.security(syminfo.tickerid, "D", ta.ema(src, lengthD))
weekly = request.security(syminfo.tickerid, "W", ta.ema(src, lengthM))
DAILY_OVER_WEEKLY_EMA = normalizeStrategy(daily / weekly, true)

///// MAYER_MULTIPLE ///// 
mm = src / ta.sma(src, 200)
MAYER_MULTIPLE = normalizeStrategy(mm, true)

///// SHARPE /////
s_len = 356
ret = ta.change(src)
s = (ta.sma(ret, s_len) - 1) / ta.stdev(ret, s_len)
SHARPE = normalizeStrategy(s, true)

///// RISK_400_MA /////
RISK_400_MA = normalizeStrategy(src / ta.ema(src, 400), true)

///// RSI_20 /////
RSI = normalizeStrategy(ta.rsi(src, 20), true)

///// PUELL_MULTIPLE /////
btcIssuance = 7200 / math.pow(2, math.floor((daysSinceGenesis(time)-bar_index)/1458)) // likely wrong
usdIssuance = btcIssuance * src
MAusdIssuance = ta.sma(usdIssuance, 365)
pm = usdIssuance / MAusdIssuance
PUELL_MULTIPLE = normalizeStrategy(pm, true)

///// AVG ///// 
AVG = (DAILY_OVER_WEEKLY_EMA + MAYER_MULTIPLE + SHARPE + RISK_400_MA + RSI + PUELL_MULTIPLE) / 6.0

adjustAvg(data) =>
    lr = linReg(src)
    multi = math.log(lr) * math.log(ta.atr(5))
    // multi = math.log(lr)
    data * multi

    
ADJ_AVG = adjustAvg(AVG)
ADJ_AVG_NORM = normalizeStrategy(ADJ_AVG, true)


///// JET GRADIENT APPROXIMATION /////
blue = #0000FFFF
cyan = #00FFFFFF
green = #00FF00FF
yellow = #FFFF00AA
red = #FF0000AA

avgColor = ADJ_AVG_NORM <= 0.25 ? color.from_gradient(ADJ_AVG_NORM, 0.00, 0.25, blue, cyan) : 
           ADJ_AVG_NORM <= 0.50 ? color.from_gradient(ADJ_AVG_NORM, 0.25, 0.50, cyan, green) : 
           ADJ_AVG_NORM <= 0.75 ? color.from_gradient(ADJ_AVG_NORM, 0.50, 0.75, green, yellow) : 
           color.from_gradient(ADJ_AVG_NORM, 0.75, 1, yellow, red)

showOscillators = input(false, title="Show Oscillators?")
oscillatorColor = showOscillators? #FFFFFF50 : na


avg = plot(ADJ_AVG_NORM, title="AVG", color=avgColor, linewidth=3)
plot(DAILY_OVER_WEEKLY_EMA, title="DAILY_OVER_WEEKLY_EMA", color=oscillatorColor)
plot(MAYER_MULTIPLE, title="MAYER_MULTIPLE", color=oscillatorColor)
plot(SHARPE, title="SHARPE", color=oscillatorColor)
plot(RISK_400_MA, title="RISK_400_MA", color=oscillatorColor)
plot(RSI, title="RSI", color=oscillatorColor)
plot(PUELL_MULTIPLE, title="PUELL_MULTIPLE", color=oscillatorColor)
// plot(POWER_LAW, title="POWER_LAW", color=color.yellow)

SELL_LIMIT = input.float(0.9, title="Buy limit")
BUY_LIMIT = input.float(0.1, title="Sell limit")

bullcolor = ADJ_AVG_NORM < BUY_LIMIT  ?  green    : na
bearcolor = ADJ_AVG_NORM > SELL_LIMIT ?  red  : na
sell = plot(SELL_LIMIT, title="Buy Limit", color=na)
buy = plot(BUY_LIMIT, title="Sell Limit",  color=na)
fill(avg, sell, bearcolor, title="sell")
fill(buy, avg, bullcolor, title="buy")


///// HORIZONTAL LINES ///// 
hline(1.0, title="", color=#FF0000FF, linewidth=1, linestyle=hline.style_dotted)
hline(0.9, title="", color=#FF0000AA, linewidth=1, linestyle=hline.style_dotted)
hline(0.8, title="", color=#FF000080, linewidth=1, linestyle=hline.style_dotted)
hline(0.7, title="", color=#FF000040, linewidth=1, linestyle=hline.style_dotted)
hline(0.5, title="", color=#00FF0020, linewidth=1, linestyle=hline.style_dotted)
hline(0.4, title="", color=#00FF0020, linewidth=1, linestyle=hline.style_dotted)
hline(0.3, title="", color=#00FF0040, linewidth=1, linestyle=hline.style_dotted)
hline(0.2, title="", color=#00FF0080, linewidth=1, linestyle=hline.style_dotted)
hline(0.1, title="", color=#00FF00AA, linewidth=1, linestyle=hline.style_dotted)
hline(0.0, title="", color=#00FF00FF, linewidth=1, linestyle=hline.style_dotted)
